/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package tes;

import java.sql.Date;
import java.sql.Connection;
import java.sql.DriverManager;  // Harus pakai ini, bukan "Drivermanager"
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;  // Untuk Message Dialog
import java.sql.PreparedStatement;
import java.sql.SQLException;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author User
 */
public class RIwayat_transaksi extends javax.swing.JFrame {
 private java.sql.Statement St;
    private Connection con;
    private ResultSet rs; // Typo diperbaiki
    private String sql = ""; // Typo diperbaiki
    
    /**
     * Creates new form RIwayat_transaksi
     */
    public RIwayat_transaksi() {
           initComponents();
    koneksiDB(); // Memanggil metode koneksi
    loadDataToTable();
        
    }
     private void koneksiDB() {
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/mysavings", "root", ""); // Database connection
           
        } catch (Exception e) {
            System.out.println("Koneksi gagal: " + e.getMessage());
        }
    }
     
     
     private void loadDataToTable() {
    try {
        // Membuat query untuk mengambil data
        String sql = "SELECT * FROM tbl_riwayat"; // Ganti 'akun' dengan nama tabel yang sesuai
        St = con.createStatement();
        rs = St.executeQuery(sql);

        // Menyiapkan model tabel untuk JTable
        DefaultTableModel model = new DefaultTableModel();
        
        // Menambahkan kolom-kolom sesuai dengan nama-nama field di tabel database
        model.addColumn("id_transaksi");
        model.addColumn("Id_nasabah");
        model.addColumn("Tanggal_Penarikan");
        model.addColumn("Total_transaksi");
        model.addColumn("Transaksi");
       

        // Mengisi data ke dalam tabel dari result set
        while (rs.next()) {
            // Menyesuaikan jumlah kolom dengan database (5 kolom)
            Object[] row = new Object[5]; // Sesuaikan dengan jumlah kolom (5 kolom)
            row[0] = rs.getInt("id_transaksi"); // Sesuaikan dengan nama kolom di database
            row[1] = rs.getInt("Id_nasabah");
            row[2] = rs.getDate("Tanggal_Penarikan");
            row[3] = rs.getInt("Total_transaksi");
            row[4] = rs.getString("Transaksi");
         
            model.addRow(row);
        }

        // Menampilkan model ke JTable
        jTable1.setModel(model);

    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Terjadi kesalahan: " + e.getMessage());
    }
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        input = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "id_transaksi", "Id_nasabah", "Tanggal_Penarikan", "Total_transaksi	", "+/-"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("<");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Cari");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(input, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(6, 6, 6))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(input, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addGap(18, 18, 18))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
                                          
    String searchQuery = input.getText().trim(); // Mengambil teks dari input

    if (searchQuery.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Input pencarian tidak boleh kosong");
        return; // Jika input kosong, tidak lakukan pencarian
    }

    // Mencari berdasarkan ID atau Nama (asumsi input bisa berupa ID atau Nama)
    String sql = "SELECT * FROM tbl_nasabah WHERE ID_nasabah LIKE ? OR Nama_nasabah LIKE ?";
    
    try {
        // Menyiapkan query dengan parameter
        PreparedStatement pst = con.prepareStatement(sql);
        pst.setString(1, "%" + searchQuery + "%"); // ID_nasabah
        pst.setString(2, "%" + searchQuery + "%"); // Nama_nasabah
        
        rs = pst.executeQuery();

        // Menyiapkan model tabel untuk JTable
        DefaultTableModel model = new DefaultTableModel();
        
        // Menambahkan kolom-kolom sesuai dengan nama-nama field di tabel database
         model.addColumn("id_transaksi");
        model.addColumn("Id_nasabah");
        model.addColumn("Tanggal_Penarikan");
        model.addColumn("Total_transaksi");
        model.addColumn("Transaksi");
       
        // Mengisi data ke dalam tabel dari result set
        while (rs.next()) {
            Object[] row = new Object[5]; // Sesuaikan dengan jumlah kolom (5 kolom)
            row[0] = rs.getInt("id_transaksi"); // Sesuaikan dengan nama kolom di database
            row[1] = rs.getInt("Id_nasabah");
            row[2] = rs.getDate("Tanggal_Penarikan");
            row[3] = rs.getInt("Total_transaksi");
            row[4] = rs.getString("Transaksi");
         
            model.addRow(row);
        }

        // Menampilkan model ke JTable
        jTable1.setModel(model);

    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Terjadi kesalahan: " + e.getMessage());
    }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
          CekAkun signUP = new CekAkun(); // Membuat objek baru dari form SignUp
    signUP.setVisible(true); // Menampilkan jendela SignUp
    this.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RIwayat_transaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RIwayat_transaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RIwayat_transaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RIwayat_transaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RIwayat_transaksi().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField input;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
