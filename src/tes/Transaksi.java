/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package tes;

import java.sql.Date;
import java.sql.Connection;
import java.sql.DriverManager;  // Harus pakai ini, bukan "Drivermanager"
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;  // Untuk Message Dialog
import java.sql.PreparedStatement;
import java.sql.SQLException;

/**
 *
 * @author User
 */
public class Transaksi extends javax.swing.JFrame {
     private java.sql.Statement St;
    private Connection con;
    private ResultSet rs; // Typo diperbaiki
    private String sql = ""; // Typo diperbaiki
    /**

    /**
     * Creates new form Transaksi
     */
    public Transaksi() {
         initComponents();
        koneksiDB();
    }
    
    private void koneksiDB() {
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/mysavings", "root", ""); // Database connection
           
        } catch (Exception e) {
            System.out.println("Koneksi gagal: " + e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ID = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        JmlSaldo = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        nabung = new javax.swing.JButton();
        narik = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IDActionPerformed(evt);
            }
        });
        getContentPane().add(ID, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 240, 140, -1));

        jLabel1.setText("ID Akun");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 240, 70, 20));
        getContentPane().add(JmlSaldo, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 290, 140, -1));

        jLabel3.setText("Jumlah saldo");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 290, -1, 20));

        nabung.setBackground(new java.awt.Color(153, 255, 153));
        nabung.setText("üí∞ Nabung Yuk!");
        nabung.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nabungActionPerformed(evt);
            }
        });
        getContentPane().add(nabung, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 360, -1, 30));

        narik.setBackground(new java.awt.Color(255, 153, 51));
        narik.setText("üí∏ Tarik Saldo");
        narik.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                narikActionPerformed(evt);
            }
        });
        getContentPane().add(narik, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 360, 110, 30));

        jButton1.setBackground(new java.awt.Color(255, 102, 102));
        jButton1.setText("‚ùå Nanti Aja");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 360, 100, 30));

        jPanel1.setBackground(new java.awt.Color(0, 153, 255));

        jLabel2.setFont(new java.awt.Font("Ravie", 0, 36)); // NOI18N
        jLabel2.setText("<html>Kelola<br>Saldo<br>Kamu! üí∏</html>");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 629, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI Light", 0, 12)); // NOI18N
        jLabel4.setText("Mau tambah saldo atau narik uang nih? Yuk, atur keuanganmu!");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 200, -1, -1));

        jButton2.setText("Buat akun");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 360, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void IDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_IDActionPerformed

    private void nabungActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nabungActionPerformed
int id = 0;
try {
    id = Integer.parseInt(ID.getText()); // Mengambil ID sebagai angka
} catch (NumberFormatException e) {
    JOptionPane.showMessageDialog(this, "ID Nasabah harus berupa angka valid!", "Error", JOptionPane.ERROR_MESSAGE);
    return; // Menghentikan eksekusi jika ID tidak valid (bukan angka)
}

int saldo;
try {
    saldo = Integer.parseInt(JmlSaldo.getText());  // Mengambil saldo dari text field
} catch (NumberFormatException e) {
    JOptionPane.showMessageDialog(this, "SALDO harus berupa angka valid!", "Error", JOptionPane.ERROR_MESSAGE);
    return; // Menghentikan eksekusi jika saldo tidak valid (bukan angka)
}

// Cek apakah ID nasabah ada di database
String sqlCheckExistence = "SELECT COUNT(*) FROM tbl_nasabah WHERE ID_nasabah = ?";

String sqlUpdate = "UPDATE tbl_nasabah SET Total_saldo = Total_saldo + ? WHERE ID_nasabah = ?";
String sqlInsert = "INSERT INTO tbl_riwayat (Total_transaksi, Id_nasabah, Tanggal_Penarikan,Transaksi) VALUES (?, ?, NOW(),'+')";

int saldoDB = 0;
try {
    con.setAutoCommit(false); // Mulai transaksi

    // Periksa apakah ID nasabah ada
    try (PreparedStatement stmtCheck = con.prepareStatement(sqlCheckExistence)) {
        stmtCheck.setInt(1, id);
        ResultSet rs = stmtCheck.executeQuery();
        if (rs.next() && rs.getInt(1) == 0) {
            JOptionPane.showMessageDialog(this, "ID Nasabah tidak ditemukan!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
    }

    // Periksa saldo nasabah
   

    // Update saldo
    try (PreparedStatement stmtUpdate = con.prepareStatement(sqlUpdate)) {
        stmtUpdate.setInt(1, saldo);
        stmtUpdate.setInt(2, id);
        int rowsAffected = stmtUpdate.executeUpdate();

        if (rowsAffected == 0) {
            JOptionPane.showMessageDialog(this, "Transaksi Gagal! ID Nasabah tidak ditemukan.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
    }

    // Insert riwayat transaksi
    try (PreparedStatement stmtInsert = con.prepareStatement(sqlInsert)) {
        stmtInsert.setInt(1, saldo);
        stmtInsert.setInt(2, id);
        stmtInsert.executeUpdate();
    }

    con.commit(); // Commit transaksi jika semua berhasil
    JOptionPane.showMessageDialog(this, "Transaksi Penarikan Berhasil!");

} catch (SQLException e) {
    try {
        con.rollback(); // Rollback jika ada kesalahan
    } catch (SQLException rollbackEx) {
        rollbackEx.printStackTrace();
    }
    JOptionPane.showMessageDialog(this, "Error: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    e.printStackTrace();
} finally {
    try {
        if (con != null) con.setAutoCommit(true); // Kembalikan ke mode auto-commit
    } catch (SQLException e) {
        e.printStackTrace();
    }
}


    }//GEN-LAST:event_nabungActionPerformed

    private void narikActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_narikActionPerformed
    int id = 0;
try {
    id = Integer.parseInt(ID.getText()); // Mengambil ID sebagai angka
} catch (NumberFormatException e) {
    JOptionPane.showMessageDialog(this, "ID Nasabah harus berupa angka valid!", "Error", JOptionPane.ERROR_MESSAGE);
    return; // Menghentikan eksekusi jika ID tidak valid (bukan angka)
}

int saldo;
try {
    saldo = Integer.parseInt(JmlSaldo.getText());  // Mengambil saldo dari text field
} catch (NumberFormatException e) {
    JOptionPane.showMessageDialog(this, "SALDO harus berupa angka valid!", "Error", JOptionPane.ERROR_MESSAGE);
    return; // Menghentikan eksekusi jika saldo tidak valid (bukan angka)
}

// Cek apakah ID nasabah ada di database
String sqlCheckExistence = "SELECT COUNT(*) FROM tbl_nasabah WHERE ID_nasabah = ?";
String sqlCheckSaldo = "SELECT Total_saldo FROM tbl_nasabah WHERE ID_nasabah = ?";
String sqlUpdate = "UPDATE tbl_nasabah SET Total_saldo = Total_saldo - ? WHERE ID_nasabah = ?";
String sqlInsert = "INSERT INTO tbl_riwayat (Total_transaksi, Id_nasabah, Tanggal_Penarikan,Transaksi) VALUES (?, ?, NOW(),'-')";

int saldoDB = 0;
try {
    con.setAutoCommit(false); // Mulai transaksi

    // Periksa apakah ID nasabah ada
    try (PreparedStatement stmtCheck = con.prepareStatement(sqlCheckExistence)) {
        stmtCheck.setInt(1, id);
        ResultSet rs = stmtCheck.executeQuery();
        if (rs.next() && rs.getInt(1) == 0) {
            JOptionPane.showMessageDialog(this, "ID Nasabah tidak ditemukan!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
    }

    // Periksa saldo nasabah
    try (PreparedStatement stmtCheckSaldo = con.prepareStatement(sqlCheckSaldo)) {
        stmtCheckSaldo.setInt(1, id);
        ResultSet rsSaldo = stmtCheckSaldo.executeQuery();
        if (rsSaldo.next()) {
            saldoDB = rsSaldo.getInt("Total_saldo");
        }
    }

    // Validasi saldo
    if (saldoDB < saldo) {
        JOptionPane.showMessageDialog(this, "Saldo tidak mencukupi untuk penarikan!", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Update saldo
    try (PreparedStatement stmtUpdate = con.prepareStatement(sqlUpdate)) {
        stmtUpdate.setInt(1, saldo);
        stmtUpdate.setInt(2, id);
        int rowsAffected = stmtUpdate.executeUpdate();

        if (rowsAffected == 0) {
            JOptionPane.showMessageDialog(this, "Transaksi Gagal! ID Nasabah tidak ditemukan.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
    }

    // Insert riwayat transaksi
    try (PreparedStatement stmtInsert = con.prepareStatement(sqlInsert)) {
        stmtInsert.setInt(1, saldo);
        stmtInsert.setInt(2, id);
        stmtInsert.executeUpdate();
    }

    con.commit(); // Commit transaksi jika semua berhasil
    JOptionPane.showMessageDialog(this, "Transaksi Penarikan Berhasil!");

} catch (SQLException e) {
    try {
        con.rollback(); // Rollback jika ada kesalahan
    } catch (SQLException rollbackEx) {
        rollbackEx.printStackTrace();
    }
    JOptionPane.showMessageDialog(this, "Error: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    e.printStackTrace();
} finally {
    try {
        if (con != null) con.setAutoCommit(true); // Kembalikan ke mode auto-commit
    } catch (SQLException e) {
        e.printStackTrace();
    }
}



    }//GEN-LAST:event_narikActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Halaman_awal signUP = new Halaman_awal(); // Membuat objek baru dari form SignUp
    signUP.setVisible(true); // Menampilkan jendela SignUp
    this.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
         BuatAkun signUP = new BuatAkun(); // Membuat objek baru dari form SignUp
    signUP.setVisible(true); // Menampilkan jendela SignUp
    this.setVisible(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Transaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Transaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Transaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Transaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Transaksi().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ID;
    private javax.swing.JTextField JmlSaldo;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton nabung;
    private javax.swing.JButton narik;
    // End of variables declaration//GEN-END:variables
}
